@charset "utf-8";

// legacy features
// no longer maintained

// 0.1.5 parent.scss

.grid-parent {
    display: grid;
    grid-auto-flow: dense; // <- fills grid cells automatically
}

// directions flipped for better usability
.h-gap-size {
    &1 { grid-column-gap: $size-1 }
    &2 { grid-column-gap: $size-2 }
    &3 { grid-column-gap: $size-3 }
    &4 { grid-column-gap: $size-4 }
    &5 { grid-column-gap: $size-5 }
    &6 { grid-column-gap: $size-6 }
    &7 { grid-column-gap: $size-7 }
    &8 { grid-column-gap: $size-8 }
    &9 { grid-column-gap: $size-9 }
}

.v-gap-size {
    &1 { grid-row-gap: $size-1; }
    &2 { grid-row-gap: $size-2; }
    &3 { grid-row-gap: $size-3; }
    &4 { grid-row-gap: $size-4; }
    &5 { grid-row-gap: $size-5; }
    &6 { grid-row-gap: $size-6; }
    &7 { grid-row-gap: $size-7; }
    &8 { grid-row-gap: $size-8; }
    &9 { grid-row-gap: $size-9; }
}

.h-fill {
    &1  { grid-template-columns: repeat(1, 1fr);    }
    &2  { grid-template-columns: repeat(2, 1fr);    }
    &3  { grid-template-columns: repeat(3, 1fr);    }
    &4  { grid-template-columns: repeat(4, 1fr);    }
    &5  { grid-template-columns: repeat(5, 1fr);    }
    &6  { grid-template-columns: repeat(6, 1fr);    }
    &7  { grid-template-columns: repeat(7, 1fr);    }
    &8  { grid-template-columns: repeat(8, 1fr);    }
    &9  { grid-template-columns: repeat(9, 1fr);    }
}

.v-fill {
    &1  { grid-template-rows: repeat(1, 1fr);    }
    &2  { grid-template-rows: repeat(2, 1fr);    }
    &3  { grid-template-rows: repeat(3, 1fr);    }
    &4  { grid-template-rows: repeat(4, 1fr);    }
    &5  { grid-template-rows: repeat(5, 1fr);    }
    &6  { grid-template-rows: repeat(6, 1fr);    }
    &7  { grid-template-rows: repeat(7, 1fr);    }
    &8  { grid-template-rows: repeat(8, 1fr);    }
    &9  { grid-template-rows: repeat(9, 1fr);    }
    &10 { grid-template-rows: repeat(10, 1fr);   }
}

// 0.1.5 child.scss

// allow spanning up to 10 columns
.h-span {
    &1  { grid-column-end: span 1;   }
    &2  { grid-column-end: span 2;   }
    &3  { grid-column-end: span 3;   }
    &4  { grid-column-end: span 4;   }
    &5  { grid-column-end: span 5;   }
    &6  { grid-column-end: span 6;   }
    &7  { grid-column-end: span 7;   }
    &8  { grid-column-end: span 8;   }
    &9  { grid-column-end: span 9;   }
    &10 { grid-column-end: span 10;  }
}

// both grid-child1-10 and #1-10 integrations 
.grid-child {
    @for $el from 1 to 11 {
    &#{$el} {
        order: #{$el};
        }
    }
} @for $el from 1 to 11 {
    .\##{$el} {
        order: #{$el};
    }
}